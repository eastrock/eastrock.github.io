<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Eastrock]]></title>
  <subtitle><![CDATA[简单亦是最美]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://eastrock.github.io//"/>
  <updated>2015-09-20T05:41:03.219Z</updated>
  <id>https://eastrock.github.io//</id>
  
  <author>
    <name><![CDATA[诗人和他的诗]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[浅谈随笔]]></title>
    <link href="https://eastrock.github.io/2015/09/20/life_show/"/>
    <id>https://eastrock.github.io/2015/09/20/life_show/</id>
    <published>2015-09-20T05:41:03.219Z</published>
    <updated>2015-09-20T05:41:03.219Z</updated>
    <content type="html"><![CDATA[<p>人生，原本就是一张张白纸订成的书卷，有心的人，用心书写，满卷花香，缤纷摇曳；无意的人，匆匆走过，一片荒凉，苍白寡淡。</p>
<h4 id="未完待续~">未完待续<del>~</del></h4><p><img src="http://i.imgur.com/12EE6F3.jpg" alt="lifestyle"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>人生，原本就是一张张白纸订成的书卷，有心的人，用心书写，满卷花香，缤纷摇曳；无意的人，匆匆走过，一片荒凉，苍白寡淡。</p>
<h4 id="未完待续~">未完待续<del>~</del></h4><p><img src="http://i.imgur.com/12EE6F]]>
    </summary>
    
      <category term="diary" scheme="https://eastrock.github.io/tags/diary/"/>
    
      <category term="life" scheme="https://eastrock.github.io/tags/life/"/>
    
      <category term="随笔" scheme="https://eastrock.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[梦进一度，年华一歌]]></title>
    <link href="https://eastrock.github.io/2015/09/20/life_some/"/>
    <id>https://eastrock.github.io/2015/09/20/life_some/</id>
    <published>2015-09-20T05:39:14.734Z</published>
    <updated>2015-09-20T05:39:14.734Z</updated>
    <content type="html"><![CDATA[<p>该分类下文章稍后更新，敬请期待<del>~</del><del>~</del>~~(●ˇ∀ˇ●)<br><img src="http://i.imgur.com/SClgZsN.jpg" alt="Android"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>该分类下文章稍后更新，敬请期待<del>~</del><del>~</del>~~(●ˇ∀ˇ●)<br><img src="http://i.imgur.com/SClgZsN.jpg" alt="Android"></p>
]]>
    </summary>
    
      <category term="android" scheme="https://eastrock.github.io/tags/android/"/>
    
      <category term="as" scheme="https://eastrock.github.io/tags/as/"/>
    
      <category term="Android" scheme="https://eastrock.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[鬼斧神工的正则表达式（PHP语言）]]></title>
    <link href="https://eastrock.github.io/2015/09/18/php_study_zhengze/"/>
    <id>https://eastrock.github.io/2015/09/18/php_study_zhengze/</id>
    <published>2015-09-18T15:46:51.015Z</published>
    <updated>2015-09-18T15:46:51.015Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/YAhICTa.jpg" alt="鬼斧神工之正则"></p>
<h3 id="写在前面">写在前面</h3><p>正则表达式对于程序员应该算是一个必备的技能了，所以我以PHP语言为载体进行了对正则表达式的学习，也借此继续学习PHP语言，如果需要可以本文中的PHP语言翻译成其他所需的语言。<br>同时推荐学习正则表达式之前先了解一些基本的语法，基本的OOP思想，基本的MVC模式知识。</p>
<h3 id="与正则表达式的初次邂逅">与正则表达式的初次邂逅</h3><p>对于正则表达式，可以在我们使用的很多产品中都有，比如在手机输入法/WINDOWS的文件搜索/WEB界面上对邮箱等的匹配从而判断邮箱是否正确，可以说正则表达式是无孔不入的，借用<a href="http://www.imooc.com" target="_blank" rel="external">慕课网</a>中badguy老师对正则表达式的评价：外表风骚，内功深厚！</p>
<h3 id="学习准备">学习准备</h3><h4 id="正则表达式的函数解析">正则表达式的函数解析</h4><p>PHP中内置的正则表达式的<strong>常用函数</strong>,函数参数只是列出了必要的参数，对于函数详细用法小伙伴们可以自行查询PHP手册或者自行<a href="http://www.google.cn" target="_blank" rel="external">Google</a>或者<a href="http://www.baidu.com" target="_blank" rel="external">百度</a>~<br>同时建议下面列出的函数可以两两分组进行比较学习。</p>
<pre><code><span class="function"><span class="title">preg_match</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$subject</span>)</span></span>
<span class="function"><span class="title">preg_match_all</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$subject</span>, <span class="variable">$matches</span>)</span></span>
</code></pre><p>1.preg_match($pattern,$subject,$matches)只将第一个匹配到的结果赋值给$matches，$matches为一维数组。preg_match返回值为匹配到的次数，0或1.<br>2.preg_match_all($pattern,$subject,$matches)将所有匹配到的结果赋值给$matches,$matches为二维数组。<br>preg_match_all返回值为匹配到的次数。</p>
<pre><code><span class="function"><span class="title">preg_replace</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>)</span></span>
<span class="function"><span class="title">preg_filter</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$replacement</span>, <span class="variable">$subject</span>)</span></span>
</code></pre><p>preg_filter()和preg_replace()区别：在对数组方面替换的时候，preg_replace()会返回所有结果，preg_filter()只会返回替换到的结果。</p>
<pre><code>preg_grep($pattern,<span class="instruction"> array </span>$input<span class="function">)</span>
</code></pre><p>只匹配，不替换，返回匹配到的数组值</p>
<pre><code><span class="function"><span class="title">preg_split</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$subject</span>)</span></span>
</code></pre><p>区别explode(…)</p>
<pre><code><span class="function"><span class="title">preg_quote</span><span class="params">(<span class="variable">$str</span>)</span></span>
</code></pre><p>比较简单，它会将正则表达式中的特殊字符进行转义。<br>regex的运算符： . \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : -<br>转义符号 \</p>
<h5 id="函数参数说明">函数参数说明</h5><p>为了大家阅读方便，也建议大家在使用过程中使用~</p>
<pre><code><span class="variable">$pattern</span> = 正则表达式
<span class="variable">$subject</span> = 匹配的目标数据
</code></pre><p>即为在文章或者示例代码中，$pattern 定义的为正则表达式，而 $subjiect 定义的为匹配的目标数据</p>
<h3 id="正则表达式基本语法">正则表达式基本语法</h3><p>正则表达式基本语法归类：</p>
<ul>
<li>界定符</li>
<li>原子</li>
<li>量词</li>
<li>边界控制 </li>
<li>模式单元</li>
</ul>
<p>虽然第一次学习感觉这些名词都很陌生，但是我相信小伙伴都可以学的明白，因为像我这么善良纯洁的新鲜小码农都了解了，你肯定没有问题啦~</p>
<h4 id="界定符">界定符</h4><p>界定符 ：表示一个正则表达式的开始和结束；EG：/[0-9]/;<br>$pattern = ‘/[0-9]/‘ 或者 #[0-9]# ｛[0-9]｝(不推荐使用大括号)；</p>
<h4 id="regexpal工具">regexpal工具</h4><p>正则表达式书写辅助工具 <a href="http://http://regexpal.com/" target="_blank" rel="external">regexpal</a> 是Google Code上的一个开源项目，可以实时匹配正则表达式，方便调试，使用HTML和JS开发，推荐给大家使用。<br><img src="http://i.imgur.com/4lxgYW5.png" alt="在线版截图"></p>
<h4 id="原子：">原子：</h4><p>可见原子：Unicode编码表中用键盘输出后肉眼可见的字符</p>
<ul>
<li>标点 _ ;,?等等</li>
<li>英文字母和数字</li>
<li>汉字/日文等其他语言文字</li>
<li>求和等数理化公式符号</li>
<li>其他可见字符<br>特殊原子：\ 因为本身还是转义字符，所以要用\才能匹配到一个\符号<br>不可见原子：Unicode编码表中用键盘输出后肉眼不可见的字符</li>
<li>换行符 \n</li>
<li>回车符 \r</li>
<li>制表符 \t</li>
<li>空格</li>
<li>其他不可见符号</li>
</ul>
<p>原子和不可见原子都能用正则表达式进行原子匹配。</p>
<h4 id="元字符：">元字符：</h4><p>[] -&gt; 匹配出现在[]中的任意一个原子<br>| -&gt; 或运算，匹配|符号左右两边的任意一个<br>[^ ] -&gt;首先这里^必须和[紧挨着，才表示匹配除了[]里面任意原子的字符<br>[ ^ ]-&gt;如果不挨着，就只表示匹配^这种字符了</p>
<p>原子的集合：</p>
<ol>
<li>. 匹配除换行符之外的任意字符。等价于[^\n]。</li>
<li>\d 匹配任意一个十进制数字，即[0-9]。</li>
<li>\D 匹配任意一个非十进制数字，即[^0-9]。</li>
<li>\s 匹配一个不可见原子，即[\f\n\r\t\v]。</li>
<li>\S 匹配一个可见原子，即[^\f\n\r\t\v]。</li>
<li>\w 匹配任意一个数字，字母或下划线，即[0-9a-zA-Z_]。</li>
<li>\W 匹配任意一个非数字，字母或是下划线，即[^0-9a-zA-Z_]。</li>
</ol>
<h4 id="量词：">量词：</h4><ol>
<li>{n} 表示其前面的原子恰好出现n次。</li>
<li>{n,} 表示其前面的原子最少出现n次。</li>
<li>{n,m} 表示其前面的原子最少出现n次，最多出现m次。</li>
<li><ul>
<li>匹配0次，1次，或者多次其之前的原子，即{0,}。</li>
</ul>
</li>
<li><ul>
<li>匹配1次，或者多次其之前的原子，即{1,}。</li>
</ul>
</li>
<li>? 匹配0次，1次，或者1次其之前的原子，即{0,1}。</li>
</ol>
<p>备注:量词不仅支持原子，同样支持原子的集合，同样支持元字符的写法。例如：\w{4}</p>
<h4 id="边界控制与模式单元：">边界控制与模式单元：</h4><p>边界控制：</p>
<ol>
<li>^ 匹配字符串开始的位置</li>
<li>$ 匹配字符串结尾的位置<br>模式单元</li>
</ol>
<ul>
<li>（）匹配其中的整体为一个原子<br>例如：（H|h)ello则匹配Hello和hello的结果。</li>
</ul>
<h3 id="修正模式">修正模式</h3><p>比较重要的两个修正模式：</p>
<blockquote>
<p>贪婪匹配<br>  匹配结果存在歧义时取其长<br>懒惰匹配<br>  匹配结果存在歧义时取其短</p>
</blockquote>
<p>其实就是在当匹配结果出现歧义的时候进行修正，默认的修正模式是贪婪匹配。<br>懒惰模式的标识为大写的U<br>例如：</p>
<pre><code><span class="variable">$pattern</span> = <span class="string">'/hello.+12/'</span>;
<span class="variable">$subject</span> = <span class="string">'hello__1231321233123131'</span>;
</code></pre><p>在贪婪模式下匹配的结果为：hello__1231321233123131<br>而修改为懒惰匹配</p>
<pre><code><span class="variable">$pattern</span> = <span class="string">'/hello.+12/U'</span>;
<span class="variable">$subject</span> = <span class="string">'hello__1231321233123131'</span>;
</code></pre><p>那么结果就会变为：hello__12</p>
<p>常见的修正模式：</p>
<ul>
<li>U 懒惰匹配</li>
<li>i 忽略英文字母大小写</li>
<li>x 忽略空白(空格，制表符等空白符）</li>
<li>s 让元字符’.’匹配包括换行符在内的所有字符</li>
<li>e 后面单独写下~</li>
</ul>
<p>如果想同时使用两种修正模式，写法可以如下：</p>
<pre><code><span class="variable">$pattern</span> = <span class="string">'/helLo/Ui'</span>;
</code></pre><h3 id="常见正则表达式练习">常见正则表达式练习</h3><ol>
<li>非空：<br> /.+/</li>
<li>浮点数匹配<br> /\d+.\d{2}$/<br>实现保留两位的浮点数，$符号是上文中的边界控制哦~</li>
<li>手机号匹配<br> /1[34578]\d{9}/<br>匹配到的为1开头，第二位为3，4，5，7，或8的11位手机号</li>
<li>email地址匹配<br> /^\w+(.\w+)*@\w+(.\w+)+$/  (\w 字母,数字,下划线)</li>
<li>URL匹配<br>http是否出现，是http还是https。即<br> ^(https?://)?。<br>是否是二级域名? 即：<br> (\w+.)+。<br>顶级域名。即：<br> [a-zA-Z]+。<br>故：正则表达式：<br> ^(https?://)?(\w+.)+[a-zA-Z]+$</li>
</ol>
<h3 id="实战：正则工具类的设计实现">实战：正则工具类的设计实现</h3><p>话不多说，直接上代码吧~</p>
<pre><code><span class="php"><span class="preprocessor">&lt;?php</span>
<span class="class"><span class="keyword">class</span> <span class="title">RegexTool</span> </span>{
    <span class="comment">//常用的regex表达式数组</span>
    <span class="keyword">private</span> <span class="variable">$validata</span> = <span class="keyword">array</span>(
        <span class="string">'require'</span>   =&gt;  <span class="string">'/.+/'</span>,
            <span class="string">'email'</span>     =&gt;  <span class="string">'/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/'</span>,
            <span class="string">'url'</span>       =&gt;  <span class="string">'/^http(s?):\/\/(?:[A-za-z0-9-]+\.)+[A-za-z]{2,4}(?:[\/\?#][\/=\?%\-&amp;~`@[\]\':+!\.#\w]*)?$/'</span>,
            <span class="string">'currency'</span>  =&gt;  <span class="string">'/^\d+(\.\d+)?$/'</span>,
            <span class="string">'number'</span>    =&gt;  <span class="string">'/^\d+$/'</span>,
            <span class="string">'zip'</span>       =&gt;  <span class="string">'/^\d{6}$/'</span>,
            <span class="string">'integer'</span>   =&gt;  <span class="string">'/^[-\+]?\d+$/'</span>,
            <span class="string">'double'</span>    =&gt;  <span class="string">'/^[-\+]?\d+(\.\d+)?$/'</span>,
            <span class="string">'english'</span>   =&gt;  <span class="string">'/^[A-Za-z]+$/'</span>,
            <span class="string">'qq'</span>        =&gt;    <span class="string">'/^\d{5,11}$/'</span>,
            <span class="string">'mobile'</span>    =&gt;    <span class="string">'/^1(3|4|5|7|8)\d{9}$/'</span>,
        );
    <span class="comment">//返回数组还是返回真假的boolean变量</span>
    <span class="keyword">private</span> <span class="variable">$returnMatechResult</span> = <span class="keyword">false</span>;
    <span class="comment">//修正模式</span>
    <span class="keyword">private</span> <span class="variable">$fixmode</span> = <span class="keyword">null</span>;
    <span class="comment">//匹配结果数组</span>
    <span class="keyword">private</span> <span class="variable">$matches</span> = <span class="keyword">array</span>();
    <span class="comment">//是否匹配成功</span>
    <span class="keyword">private</span> <span class="variable">$isMatch</span> = <span class="keyword">false</span>;
    <span class="comment">//类的构造函数</span>
    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(<span class="variable">$returnMatchResult</span> = false, <span class="variable">$fixMode</span> = null)</span> </span>{
    <span class="variable">$this</span>-&gt;returnMatchResult = <span class="variable">$returnMatchResult</span>;
    <span class="variable">$this</span>-&gt;fixMode = <span class="variable">$fixMode</span>;
   }
   <span class="comment">//核心匹配方法</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">regex</span><span class="params">(<span class="variable">$pattern</span> ,<span class="variable">$subject</span>)</span></span>{
       <span class="comment">//array_key_exists判断键值是否存在</span>
        <span class="keyword">if</span> (array_key_exists(strtolower(<span class="variable">$pattern</span>), <span class="variable">$this</span>-&gt;validata)) {
            <span class="variable">$pattern</span> = <span class="variable">$this</span>-&gt;validata[<span class="variable">$pattern</span>].<span class="variable">$this</span>-&gt;fixmode;
        }
        <span class="variable">$this</span>-&gt;returnMatchResult?
        preg_match_all(<span class="variable">$pattern</span>, <span class="variable">$subject</span>, <span class="variable">$this</span>-&gt;matches):<span class="variable">$this</span>-&gt;isMatch = preg_match(<span class="variable">$pattern</span>, <span class="variable">$subject</span>)===<span class="number">1</span>;
        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;getRegexResult();
   }
   <span class="comment">//获取返回值类型的方法</span>
   <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getRegexResult</span><span class="params">()</span></span>{
           <span class="keyword">if</span> (<span class="variable">$this</span>-&gt;returnMatchResult) {
               <span class="keyword">return</span> <span class="variable">$this</span>-&gt;matches;
           }<span class="keyword">else</span>{
               <span class="keyword">return</span> <span class="variable">$this</span>-&gt;isMatch;
           }
   }
   <span class="comment">//切换返回值类型</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">togoReturnType</span><span class="params">(<span class="variable">$boolean</span> = null)</span></span>{

           <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$boolean</span>)) {
               <span class="variable">$this</span>-&gt;returnMatchResult = !<span class="variable">$this</span>-&gt;returnMatchResult;
           }<span class="keyword">else</span>{
               <span class="variable">$this</span>-&gt;returnMatchResult = is_bool(<span class="variable">$boolean</span>)?<span class="variable">$boolean</span>:(bool)<span class="variable">$boolean</span>;
           }
   }
   <span class="comment">//设定修正模式</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFixMode</span><span class="params">(<span class="variable">$fixMode</span>)</span> </span>{
    <span class="variable">$this</span>-&gt;fixMode = <span class="variable">$fixMode</span>;
   }
   <span class="comment">//一些数据验证方法</span>

   <span class="comment">//是否为空</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">noEmpty</span><span class="params">(<span class="variable">$str</span>)</span></span>{
        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;regex(<span class="string">'require'</span>,<span class="variable">$str</span>);
   }
   <span class="comment">//验证email</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isEmail</span><span class="params">(<span class="variable">$email</span>)</span></span>{
       <span class="keyword">return</span> <span class="variable">$this</span>-&gt;regex(<span class="string">'email'</span>,<span class="variable">$email</span>);
   }
   <span class="comment">//....其他的类似，省略了，小伙伴自己可以自定义添加哦~</span>

   <span class="comment">//用户自定义正则表达式</span>
   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(<span class="variable">$pattern</span>, <span class="variable">$subject</span>)</span> </span>{
    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;regex(<span class="variable">$pattern</span>, <span class="variable">$subject</span>);
    }
}
<span class="preprocessor">?&gt;</span></span>
</code></pre><p>这个工具已经自己调试过了，如果有问题可以在下面评论交流哦~，欢迎提出改进方案(●ˇ∀ˇ●)<br>另外上述正则表达式有小伙伴有更好的改进意见的也欢迎交流~(●ˇ∀ˇ●)</p>
<p>ps:对于正则表达式的学习暂时先告一段落了，如果有时间会结合网上的教程自己撸一个简易的Smarty模板引擎，当然只是简易的，届时会在php的分类板块下更新，欢迎小伙伴阅读~<br>   最后感谢<a href="http://www.imooc.com" target="_blank" rel="external">慕课网</a>上的相关教程和网上各位大牛的博客和文章，虽然不能一一贴出链接，但谢谢你们的分享。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://i.imgur.com/YAhICTa.jpg" alt="鬼斧神工之正则"></p>
<h3 id="写在前面">写在前面</h3><p>正则表达式对于程序员应该算是一个必备的技能了，所以我以PHP语言为载体进行了对正则表达式的学习，也借]]>
    </summary>
    
      <category term="PHP" scheme="https://eastrock.github.io/tags/PHP/"/>
    
      <category term="正则" scheme="https://eastrock.github.io/tags/%E6%AD%A3%E5%88%99/"/>
    
      <category term="技术学习" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo静态博客搭建（1）初步搭建]]></title>
    <link href="https://eastrock.github.io/2015/08/06/hello_hexo(1)/"/>
    <id>https://eastrock.github.io/2015/08/06/hello_hexo(1)/</id>
    <published>2015-08-06T10:12:49.212Z</published>
    <updated>2015-08-06T10:12:49.212Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/M5QrVkB.png" alt=""></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过这段时间零零星星的折腾，个人的第一个博客算是已经有一个雏形了，在此感谢<a href="http://weibo.com/likuochung" target="_blank" rel="external">Moon</a>学长在校时的指导，让我少折腾了很多的弯路，不过我知道目前的版本还有很多需要优化的地方，我会继续的优化，同时也会不定期的更新自己的技术学习文章或者一些生活的杂记，如果有什么好的建议或者不足，欢迎在每篇博客下面评论回复哦~(～￣▽￣)～*<br>后面我会继续学习Android和Web相关的知识，新注册的<a href="https://github.com/eastrock" target="_blank" rel="external">Github</a>,欢迎交流~（ps：原来的git账号种种原因放弃使用~）</p><p><br>下面整个博客的搭建流程：</p>
<hr>
<a id="more"></a>
<h3 id="准备工作"><strong>准备工作</strong></h3><p>-<a href="http://git-scm.com/download/win" target="_blank" rel="external">Git</a><br>-<a href="https://nodejs.org/download/" target="_blank" rel="external">Node.js</a><br>-<a href="https://github.com/" target="_blank" rel="external">Github</a>账户</p>
<h3 id="小提示">小提示</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;按照提示正确安装上述软件即可~如果不懂可以直接一直下一步傻瓜式安装<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;个人安装环境为Windows 8.1，如果是Mac请移步<a href="www.google.com">Google</a>或<a href="www.baidu.com">Baidu</a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps：过程前几步操作可自由排序，并不影响最后效果</p>
<h3 id="详细过程">详细过程</h3><h4 id="一_安装Hexo">一 安装Hexo</h4><p>Node 和 Git 都安装好后，可执行如下命令安装hexo：  </p>
<pre><code>npm <span class="keyword">install</span> -g hexo
</code></pre><p>如果您安装的是3.0版本，则使用以下命令：    </p>
<pre><code>npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span>  
</code></pre><h4 id="二_添加SSH-Key">二 添加SSH-Key</h4><p>GitHub账号和GitHub Pages一般都有，已有的请自动略过这一部分。（后续补充）</p>
<h4 id="三_初始化Hexo">三 初始化Hexo</h4><p>初始化Hexo到指定路径：  </p>
<pre><code>hexo init <span class="tag">&lt;<span class="title">folder</span>&gt;</span>
</code></pre><p>也可以到相应的路径下：  </p>
<pre><code><span class="title">hexo</span> init
</code></pre><h4 id="四_生成静态界面">四 生成静态界面</h4><pre><code>hexo <span class="keyword">ge</span><span class="label">nerate</span>
</code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;命令必须在init目录下执行，否则不成功，但是也不报错。<br>当你修改文章Tag或内容，不能正确重新生成内容，可以删除hexo\db.json 后重试，还不行就到 public 目录删除对应的文件，重新生成。</p>
<h4 id="五_本地启动">五 本地启动</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行如下命令，启动本地服务，进行文章预览调试：  </p>
<pre><code>hexo <span class="keyword">server</span>  
</code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行之后可以在浏览器输入<a href="localhost:4000" target="_blank" rel="external">localhost:4000</a>进行预览调试<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ps：建议使用高版本浏览器，否则可能……</p>
<h4 id="六_主题更换">六 主题更换</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hexo提供了很多的博客主题供大家更换，详情可以登录Hexo官网点击Themes选项，或者网友提供的<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">主题</a><br>1、主题安装（一行git命令）：  </p>
<pre><code>git <span class="built_in">clone</span> https://github.com/<span class="comment">#主题地址</span>
</code></pre><p>2、安装完成后，打开 hexo_config.yml ，修改主题为：  </p>
<pre><code><span class="label">theme:</span> <span class="preprocessor">#选择的主题名</span>
</code></pre><p>3、hexo\themes\modernist 目录，编辑主题配置文件 _config.yml：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;根据相应的主题介绍可以自行修改，每个主题的某些代码会有出入。</p>
<p>4、更新主题  </p>
<pre><code><span class="built_in">cd</span> themes/<span class="comment">#主题根目录</span>
git pull
</code></pre><h4 id="七_加入多说评论">七 加入多说评论</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hexo默认使用的评论插件是Disqus，为了方便广大国内用户使用多说来替换Disqus，特推出此教程。使用步骤如下：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在_config.yml中添加多说的配置：</p>
<pre><code><span class="attribute">duoshuo_shortname</span>: <span class="string">你站点的short_name</span>
</code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改themes\landscape\layout_partial\article.ejs模板<br>把<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; </span>%&gt;<span class="xml"></span><br><span class="line"> <span class="tag">&lt;<span class="title">section</span> <span class="attribute">id</span>=<span class="value">"comments"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"disqus_thread"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">noscript</span>&gt;</span>Please enable JavaScript to view the <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"//disqus.com/?ref_noscript"</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">noscript</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br><span class="line"> </span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<p>修改为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (!<span class="attribute">index</span> &amp;&amp; <span class="attribute">post.comments</span> &amp;&amp; <span class="attribute">config.duoshuo_shortname</span>)&#123; %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">section</span> <span class="attribute">id</span>=<span class="value">"comments"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多说评论框 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"ds-thread"</span> <span class="attribute">data-thread-key</span>=<span class="value">"&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;"</span> <span class="attribute">data-title</span>=<span class="value">"&lt;%= post.title %&gt;"</span> <span class="attribute">data-url</span>=<span class="value">"&lt;%= page.permalink %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多说评论框 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="keyword">var</span> duoshuoQuery = &#123;short_name:<span class="string">'&lt;%= config.duoshuo_shortname %&gt;'</span>&#125;;</span><br><span class="line">      (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;</span><br><span class="line">        ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;</span><br><span class="line">        ds.charset = <span class="string">'UTF-8'</span>;</span><br><span class="line">        (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] </span><br><span class="line">         || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);</span><br><span class="line">      &#125;)();</span><br><span class="line">      </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="八_加入文章导航">八 加入文章导航</h4><p>在article.ejs文件中加入：</p>
<pre><code>&lt;<span class="preprocessor">%</span>- partial<span class="comment">('post/nav')</span> <span class="preprocessor">%</span>&gt;
</code></pre><p>在主题\themes\主题名\layout_partial\post目录下加入nav.ejs文件（如果有自行忽略）：<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> (post.prev || post.<span class="keyword">next</span>)&#123; </span>%&gt;<span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">nav</span> <span class="attribute">id</span>=<span class="value">"article-nav"</span>&gt;</span></span><br><span class="line">  </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (post.prev)&#123; </span>%&gt;<span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> url_for(post.prev.path) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">id</span>=<span class="value">"article-nav-newer"</span> <span class="attribute">class</span>=<span class="value">"article-nav-link-wrap"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">strong</span> <span class="attribute">class</span>=<span class="value">"article-nav-caption"</span>&gt;</span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'sidebar.newer'</span>) </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"article-nav-title"</span>&gt;</span></span><br><span class="line">        </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (post.prev.title)&#123; </span>%&gt;<span class="xml"></span><br><span class="line">          </span>&lt;%=<span class="ruby"> post.prev.title </span>%&gt;<span class="xml"></span><br><span class="line">        </span>&lt;%<span class="ruby"> &#125; <span class="keyword">else</span> &#123; </span>%&gt;<span class="xml"></span><br><span class="line">          (no title)</span><br><span class="line">        </span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span><br><span class="line">      <span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"icon"</span> <span class="attribute">id</span>=<span class="value">"icon-chevron-right"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">  </span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span><br><span class="line">  </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (post.<span class="keyword">next</span>)&#123; </span>%&gt;<span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> url_for(post.<span class="keyword">next</span>.path) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">id</span>=<span class="value">"article-nav-older"</span> <span class="attribute">class</span>=<span class="value">"article-nav-link-wrap"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">strong</span> <span class="attribute">class</span>=<span class="value">"article-nav-caption"</span>&gt;</span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'sidebar.older'</span>) </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"article-nav-title"</span>&gt;</span></span>&lt;%=<span class="ruby"> post.<span class="keyword">next</span>.title </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"icon"</span> <span class="attribute">id</span>=<span class="value">"icon-chevron-left"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">  </span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span><br><span class="line"><span class="tag">&lt;/<span class="title">nav</span>&gt;</span></span><br><span class="line"></span>&lt;%<span class="ruby"> &#125; </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure></p>
<h3 id="搭建心得">搭建心得</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作为一个临近期末的大学生，理应把自己投入紧张的复习和预习工作中，但是作为一个不安分的代码少年，想尝试一下Hexo的效果，也为自己后续的学习做一点总结吧~搭建过程整体还算顺利，但是也有一些小的细节，比如在添加SSH的时候可以用GITHUB的官方客户端登录一下就自动生成、用<a href="http://dlsw.baidu.com/sw-search-sp/soft/1a/17239/Everything-1.3.4.686.x64-Setup.1418106344.exe" target="_blank" rel="external">Everthing</a>可以快速定位文件位置，在hexo的3.0版本之后<br><code>type: git</code><br>同时在yml文件中，代码：之后一定要有空格，最初的时候遇到好几次这个问题的报错~<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过在这个过程中还是收获了很多东西，因为之前一直做Android方向的东西，对网页都只是停留在很基础的一个层面，这次的搭建也让我了解了一些WEB方面的东西，同时为自己准备了一个存储和学习总结的平台，总体感觉还是不错~<br>后续的优化技巧会不定期更新~<br>（初稿于6月底，改于7月中）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://i.imgur.com/M5QrVkB.png" alt=""></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过这段时间零零星星的折腾，个人的第一个博客算是已经有一个雏形了，在此感谢<a href="http://weibo.com/likuochung">Moon</a>学长在校时的指导，让我少折腾了很多的弯路，不过我知道目前的版本还有很多需要优化的地方，我会继续的优化，同时也会不定期的更新自己的技术学习文章或者一些生活的杂记，如果有什么好的建议或者不足，欢迎在每篇博客下面评论回复哦~(～￣▽￣)～*<br>后面我会继续学习Android和Web相关的知识，新注册的<a href="https://github.com/eastrock">Github</a>,欢迎交流~（ps：原来的git账号种种原因放弃使用~）<p><br>下面整个博客的搭建流程：</p>
<hr>]]>
    
    </summary>
    
      <category term="blog" scheme="https://eastrock.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="https://eastrock.github.io/tags/hexo/"/>
    
      <category term="技术学习" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Hexo" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo静态博客搭建（2）部分优化]]></title>
    <link href="https://eastrock.github.io/2015/08/06/hello_hexo(2)/"/>
    <id>https://eastrock.github.io/2015/08/06/hello_hexo(2)/</id>
    <published>2015-08-06T09:55:54.794Z</published>
    <updated>2015-08-06T09:55:54.794Z</updated>
    <content type="html"><![CDATA[<h2 id="优化工作">优化工作</h2><h4 id="绑定域名">绑定域名</h4><p>托管在GitHubPages上的博客都会自动绑定一个二级域名：uersname.github.io，访问该二级域名即可访问自己的博客主页，同时也可以在Github中新建repository来做博客的自定义关于界面，注意非uersname.github.io的repo要使用gh-pages分支，而pages默认的即可直接用master分支<br>如果你对GigHub不够了解，可自行查询分支和GitHub Pages的用法。<br>如果对github给出的二级域名不满意的话，那么可以自行申请一个域名，可以在<a href="https://www.godaddy.com/" target="_blank" rel="external">狗爹（godaddy）</a> 或者 <a href="http://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>注册自己的域名，因为现在国内的域名已经开始要求备案，可能个人域名使用要先进行备案操作，备案操作直接按照阿里云给出的提示操作即可。</p>
<h4 id="添加RSS插件">添加RSS插件</h4><p>使用插件 hexo-generator-feed 能生成 Atom 1.0 或者 RSS 2.0 feed.<br>安装：</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span>
</code></pre><p>配置：</p>
<pre><code><span class="attribute">feed</span>:
    <span class="attribute">type</span>: atom
    <span class="attribute">path</span>: atom.xml
    <span class="attribute">limit</span>: <span class="number">20</span>
</code></pre><p>type 表示类型, 是 atom 还是 rss2.<br>path 表示 Feed 路径<br>limit 最多多少篇最近文章</p>
<h4 id="添加文章目录">添加文章目录</h4><p>在 Hexo 的 2.4.1 版本之后, <a href="https://github.com/tommy351" target="_blank" rel="external">tommy351</a> 给 Hexo 增加了 Table of contents 功能, 并提供了相关的使用方法 <a href="https://github.com/hexojs/hexo/issues/408" target="_blank" rel="external">TOC (Table of contents) helper #408</a>.</p>
<p>使用方法很简单，也可以自定义样式，给大家分享个人比较简单的设定，可以自行修改代码进行优化。</p>
<p>在主题目录下\layout_partial\article.ejs中对应位置添加如下的代码：</p>
<pre><code><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"article-entry"</span> <span class="attribute">itemprop</span>=<span class="value">"articleBody"</span>&gt;</span>
     <span class="comment">&lt;!--文章目录--&gt;</span>

     </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (post.excerpt &amp;&amp; index){ </span>%&gt;<span class="xml">
        </span>&lt;%-<span class="ruby"> post.excerpt </span>%&gt;<span class="xml">
        </span>&lt;%<span class="ruby"> } <span class="keyword">else</span> { </span>%&gt;<span class="xml">
      </span>&lt;%<span class="ruby"> <span class="keyword">if</span>(post.toc !== <span class="keyword">false</span>){ </span>%&gt;<span class="xml">
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"toc"</span> <span class="attribute">class</span>=<span class="value">"toc-article"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">strong</span> <span class="attribute">class</span>=<span class="value">"toc-title"</span>&gt;</span>文章目录<span class="tag">&lt;/<span class="title">strong</span>&gt;</span>
        </span>&lt;%-<span class="ruby"> toc(post.content) </span>%&gt;<span class="xml">
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
      </span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml">
    </span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml">
    <span class="comment">&lt;!--End--&gt;</span>
 </span>&lt;%-<span class="ruby"> post.content </span>%&gt;<span class="xml">
  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span>
</code></pre><p>上述代码加入了自己控制目录的展开与否，如果你在当前文章中部需要文章目录，那么：</p>
<pre><code>title: Hexo
category: [Android,Hexo]  
tags: [hexo,blog] 
<span class="header">toc： false #设置这里值为false
---</span>

## 博客正文 ##
</code></pre><p>在style样式文件中可以自定义样式，可以自己创建toc.styl文件通过import来关联，也可以直接在对应CSS文件中修改，附上简单的样式代码：</p>
<pre><code><span class="comment">/**
文章目录CSS代码
*/</span>
<span class="class">.toc-article</span> {
  <span class="attribute">background</span>: <span class="hexcolor">#eee</span>;
  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> .<span class="number">5em</span>;
  <span class="tag">padding</span>: <span class="tag">1em</span>
}

<span class="class">.toc-article</span> <span class="tag">strong</span> {
  <span class="tag">padding</span>: <span class="class">.3em</span> <span class="tag">0</span>
}

<span class="id">#toc</span> {
  <span class="attribute">line-height</span>: <span class="number">1em</span>;
  <span class="attribute">font-size</span>: .<span class="number">8em</span>;
  <span class="tag">float</span>: <span class="tag">right</span>
}

<span class="id">#toc</span> <span class="class">.toc</span> {
  <span class="tag">padding</span>: <span class="tag">0</span>
}
<span class="id">#toc</span> <span class="class">.toc</span> <span class="tag">li</span> {
  <span class="tag">list-style-type</span>: <span class="tag">none</span>
}

<span class="id">#toc</span> <span class="tag">ol</span> {
  <span class="tag">margin-left</span>: <span class="tag">0</span>
}

<span class="id">#toc</span> <span class="class">.toc-child</span> {
  <span class="attribute">padding-left</span>: <span class="number">1.5em</span>
}
</code></pre><h3 id="给静态博客加速">给静态博客加速</h3><h4 id="优化Html/CSS/JS/Image">优化Html/CSS/JS/Image</h4><p>为了优化HTML,CSS,JS, 我们需要安装插件 <a href="https://github.com/FlashSoft/hexo-console-optimize" target="_blank" rel="external">Hexo Optimize</a>, 安装非常简单 Git Bash 进到你的hexo博客根目录安装该插件<br>    npm install hexo-console-optimize<br>利用命令 <strong>hexo optimize</strong> 或者 <strong>hexo o</strong> 即可优化资源：HTML、CSS、JS、Image.</p>
<h4 id="CDN">CDN</h4><p>（如果对访问速度相对满意可以忽略类似操作）<br>接下来需要把 CSS, JS, Image 等静态文件利用七牛等 CDN 服务加速, 也就是 hexo o 以后生成的这类文件(优化过的). 一般来说只添加网页结构基本不变的东西, 例如 CSS 和 JS, 对于内容里面的图片文件另议. 将其上传到七牛的服务器上，同时将本地对应的代码链接改为七牛的地址。</p>
<blockquote>
<p>需要注意一点 jquery.fancybox.css 将会用到 fancybox 文件下的图片, 所以我们还需要把对应的图片上传到七牛, 并且保持文件夹目录</p>
</blockquote>
<h4 id="添加_InstantClick">添加 InstantClick</h4><p>加上 InstantClick.js 后, 通过预加载可以达到网页秒开的效果 (并没有实际提速), 具体介绍可以看这里 <a href="http://zhiqiang.org/blog/it/install-instantclick.html" target="_blank" rel="external">博客启用InstantClick</a>. </p>
<h4 id="让多说的评论框转起来">让多说的评论框转起来</h4><p>这个个人还没有进行实现，等待域名备案结束后一并修改，可以移步<a href="http://wsgzao.github.io/post/duoshuo/" target="_blank" rel="external">博文</a>进行学习和设置~<br>V说的文章：多说自定义CSS 让你的多说评论动感起来<a href="http://www.vsay.cn/one-more-custom-css-lets-you-say-comments-city.html" target="_blank" rel="external">http://www.vsay.cn/one-more-custom-css-lets-you-say-comments-city.html</a></p>
<p><img src="http://i.imgur.com/rvPmUYE.gif" alt="示例图片"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="优化工作">优化工作</h2><h4 id="绑定域名">绑定域名</h4><p>托管在GitHubPages上的博客都会自动绑定一个二级域名：uersname.github.io，访问该二级域名即可访问自己的博客主页，同时也可以在Github中新建reposit]]>
    </summary>
    
      <category term="blog" scheme="https://eastrock.github.io/tags/blog/"/>
    
      <category term="hexo" scheme="https://eastrock.github.io/tags/hexo/"/>
    
      <category term="技术学习" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Hexo" scheme="https://eastrock.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/Hexo/"/>
    
  </entry>
  
</feed>